This file contains questions that will be processed later.
==========================================================

SOURCE CODE
- Where are the keywords defined ?
- Where are defined the basic types 'int' and 'char' ?
- Where is defined '__noreturn__' (see '_exit' function within 'unistd.h') ?
- Where is defined the word (or macro or else) 'type' (used in stddef.h in libc) ?
- Where are defined the types 'valist' (see variadic functions) ?
- Where are the generic C library files (from the C language - the MAIN ones - not libc ones - as for example 'stdarg.h' -> the file from the 'Standard C library') ?
- Where are defined - and what is the code behing (are they libc functions ?) - basic functions as ?
  	- 'exec'
	- 'fclose'
	- 'fopen'
	- 'getc'
	- 'printf' (stdio.h)
	- 'putc'
	- 'scanf'

==========================================================

LIBRARIES
- What are '.so' files located under $HOME/.guix-profile/lib (among others - but other location exists) ? Are they compiled libraries ?
- How to use them '.so' files located under $HOME/.guix-profile/lib (among others - but other location exists) ?

==========================================================

GENERAL CODE
-

==========================================================

DYNAMIC CODE
- How to create a dynamic variable name, for example : I want to loop on an array of variable names and get their value -> how to do it ?
      Array = [ "char", "int"]
      I want to get the sizeof(char) and sizeof(int).
      See the file "types_and_number_of_bits.c" to loop on array of all types to get their size.
- How to adapt dynamically the format of printf output ? For example, I want to align some string outputted but I want that they align all length depending on the largest one - and I do not already know how many char it will contains ?
- How to evaluate an expression placed within a string ? Example : I want to evaluate a string that does "int result = 2 * 2 * ... * 2" and multiply 2 a N number of times so I need to loop N times to create the string that will then be evaluated. 

==========================================================

COMPILATION
- How to interpret the content added within the lines '#' after pre-processing the .c file ?
- Specifically, how to interpret the 'built-in', 'command-line', 'path' and numbers before and after ?
Example :
# 0 "types_and_number_of_bits.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 " /home/incognito/.guix-profile/include/stdc-predef.h" 1 3
# 0 "<command-line>" 2
# 1 "types_and_number_of_bits.c"
# 13 "types_and_number_of_bits.c"
# 1 "/home/incognito/.guix-profile/include/math.h" 1 3
# 27 "/home/incognito/.guix-profile/include/math.h" 3

==========================================================
